/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 * @format
 */

/* eslint-env browser */

'use strict';

const React = require('react');var _require =

require('emotion');const css = _require.css;

import {
Drawer,
Button,
Radio,
Slider,
Divider,
Icon,
Form,
Checkbox } from
'antd';

















class OptionsDrawer extends React.Component {constructor() {var _temp;return _temp = super(...arguments), this.
    state = { visible: false }, this.

    showDrawer = () => {
      this.setState({
        visible: true });

    }, this.

    onClose = () => {
      this.setState({
        visible: false });

    }, _temp;}

  render() {
    return (
      React.createElement('div', null,
        React.createElement(Button, {
          className: optionsDrawerButton,
          type: 'default',
          size: 'large',
          onClick: this.showDrawer,
          icon: 'setting' }),

        React.createElement(Drawer, {
            title: React.createElement(Icon, { type: 'setting', style: { fontSize: 20 } }),
            width: 350,
            placement: 'right',
            mask: false,
            onClose: this.onClose,
            visible: this.state.visible },
          React.createElement(Divider, null, 'Options'),
          React.createElement(Form, null,
            React.createElement(Form.Item, { label: 'Layout' },
              React.createElement(Radio.Group, {
                  defaultValue: this.props.options.layoutName,
                  onChange: evt =>
                  this.props.onOptionChange({ layoutName: evt.target.value }) },

                ['dagre', 'euler', 'klay'].map(layout =>
                React.createElement(Radio.Button, { value: layout, key: layout },
                  layout))))),






          React.createElement(Divider, null, 'Filters'),
          React.createElement(Form, null,
            React.createElement(Form.Item, { label: 'Incoming Edges' },
              React.createElement(Slider, {
                range: true,
                max: this.props.info.maxIncomingEdges,
                defaultValue: [0, this.props.info.maxIncomingEdges],
                onChange: incomingEdgesRange =>
                this.props.onFilterChange({ incomingEdgesRange }) })),



            React.createElement(Form.Item, { label: 'Outgoing Edges' },
              React.createElement(Slider, {
                range: true,
                max: this.props.info.maxOutgoingEdges,
                defaultValue: [0, this.props.info.maxOutgoingEdges],
                onChange: outgoingEdgesRange =>
                this.props.onFilterChange({ outgoingEdgesRange }) })),



            React.createElement(Form.Item, { label: 'Type' },
              React.createElement(Checkbox.Group, {
                options: this.props.info.dependencyTypes,
                defaultValue: this.props.info.dependencyTypes,
                onChange: dependencyTypes =>
                this.props.onFilterChange({ dependencyTypes }) }))))));







  }}


const optionsDrawerButton = css`
  position: absolute;
  top: 20px;
  right: 20px;
  font-size: 1.5em;
`;

module.exports = OptionsDrawer;